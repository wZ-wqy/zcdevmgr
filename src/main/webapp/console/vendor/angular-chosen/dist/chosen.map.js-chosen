{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/chosen.coffee"],"names":["indexOf","item","i","l","this","length","module","exports","angular","directive","$timeout","CHOSEN_OPTION_WHITELIST","NG_OPTIONS_REGEXP","isEmpty","snakeCase","input","replace","$1","toLowerCase","value","key","isArray","isObject","hasOwnProperty","restrict","require","terminal","link","scope","element","attr","ngModel","chosen","defaultText","disableWithMessage","empty","initOrUpdate","match","options","origRender","removeEmptyMessage","startLoading","stopLoading","valuesExpr","viewWatch","addClass","$eval","forEach","call","trigger","removeClass","data","default_text","results_none_found","$render","multiple","$viewValue","$watch","$observe","ngOptions","$watchCollection","newVal","oldVal","timer","isUndefined","$on","event","cancel"],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports = angular.module('angular-chosen', [])\n\nangular.module('angular-chosen').directive 'chosen', ['$timeout', ($timeout) ->\n\n  # This is stolen from Angular...\n  NG_OPTIONS_REGEXP = /^\\s*(.*?)(?:\\s+as\\s+(.*?))?(?:\\s+group\\s+by\\s+(.*))?\\s+for\\s+(?:([\\$\\w][\\$\\w]*)|(?:\\(\\s*([\\$\\w][\\$\\w]*)\\s*,\\s*([\\$\\w][\\$\\w]*)\\s*\\)))\\s+in\\s+(.*?)(?:\\s+track\\s+by\\s+(.*?))?$/\n\n  # Whitelist of options that will be parsed from the element's attributes and passed into Chosen\n  CHOSEN_OPTION_WHITELIST = [\n    'noResultsText'\n    'allowSingleDeselect'\n    'disableSearchThreshold'\n    'disableSearch'\n    'enableSplitWordSearch'\n    'inheritSelectClasses'\n    'maxSelectedOptions'\n    'placeholderTextMultiple'\n    'placeholderTextSingle'\n    'searchContains'\n    'singleBackstrokeDelete'\n    'displayDisabledOptions'\n    'displaySelectedOptions'\n    'width'\n  ]\n\n  snakeCase = (input) -> input.replace /[A-Z]/g, ($1) -> \"_#{$1.toLowerCase()}\"\n  isEmpty = (value) ->\n    if angular.isArray(value)\n      return value.length is 0\n    else if angular.isObject(value)\n      return false for key of value when value.hasOwnProperty(key)\n    true\n\n  restrict: 'A'\n  require: '?ngModel'\n  terminal: true\n  link: (scope, element, attr, ngModel) ->\n\n    element.addClass('angular-chosen')\n\n    # Take a hash of options from the chosen directive\n    options = scope.$eval(attr.chosen) or {}\n\n    # Options defined as attributes take precedence\n    angular.forEach attr, (value, key) ->\n      options[snakeCase(key)] = scope.$eval(value) if key in CHOSEN_OPTION_WHITELIST\n\n    startLoading = -> element.addClass('loading').attr('disabled', true).trigger('chosen:updated')\n    stopLoading = -> element.removeClass('loading').attr('disabled', false).trigger('chosen:updated')\n\n    chosen = null\n    defaultText = null\n    empty = false\n\n    initOrUpdate = ->\n      if chosen\n        element.trigger('chosen:updated')\n      else\n        chosen = element.chosen(options).data('chosen')\n        if angular.isObject(chosen)\n          defaultText = chosen.default_text\n\n    # Use Chosen's placeholder or no results found text depending on whether there are options available\n    removeEmptyMessage = ->\n      empty = false\n      element.attr('data-placeholder', defaultText)\n\n    disableWithMessage = ->\n      empty = true\n      element.attr('data-placeholder', chosen.results_none_found).attr('disabled', true).trigger('chosen:updated')\n\n    # Watch the underlying ngModel for updates and trigger an update when they occur.\n    if ngModel\n      origRender = ngModel.$render\n      ngModel.$render = ->\n        origRender()\n        initOrUpdate()\n\n      # This is basically taken from angular ngOptions source.  ngModel watches reference, not value,\n      # so when values are added or removed from array ngModels, $render won't be fired.\n      if attr.multiple\n        viewWatch = -> ngModel.$viewValue\n        scope.$watch viewWatch, ngModel.$render, true\n    # If we're not using ngModel (and therefore also not using ngOptions, which requires ngModel),\n    # just initialize chosen immediately since there's no need to wait for ngOptions to render first\n    else initOrUpdate()\n\n    # Watch the disabled attribute (could be set by ngDisabled)\n    attr.$observe 'disabled', -> element.trigger('chosen:updated')\n\n    # Watch the collection in ngOptions and update chosen when it changes.  This works with promises!\n    # ngOptions doesn't do anything unless there is an ngModel, so neither do we.\n    if attr.ngOptions and ngModel\n      match = attr.ngOptions.match(NG_OPTIONS_REGEXP)\n      valuesExpr = match[7]\n\n      scope.$watchCollection valuesExpr, (newVal, oldVal) ->\n        # Defer execution until DOM is loaded\n        timer = $timeout(->\n          if angular.isUndefined(newVal)\n            startLoading()\n          else\n            removeEmptyMessage() if empty\n            stopLoading()\n            disableWithMessage() if isEmpty(newVal)\n        )\n\n      scope.$on '$destroy', (event) ->\n        $timeout.cancel timer if timer?\n]\n"]}